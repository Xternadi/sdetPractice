{"name": "test_practice_form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: File not found : C:/Users/horiz/OneDrive/Desktop/sdet/project/1.png\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7566A9642+30946]\n\t(No symbol) [0x00007FF75665E3D9]\n\t(No symbol) [0x00007FF756556FDA]\n\t(No symbol) [0x00007FF7565A041D]\n\t(No symbol) [0x00007FF7565CCA6A]\n\t(No symbol) [0x00007FF75659BBB6]\n\t(No symbol) [0x00007FF7565CCC80]\n\t(No symbol) [0x00007FF7565EB041]\n\t(No symbol) [0x00007FF7565CC813]\n\t(No symbol) [0x00007FF75659A6E5]\n\t(No symbol) [0x00007FF75659B021]\n\tGetHandleVerifier [0x00007FF7567DF84D+1301229]\n\tGetHandleVerifier [0x00007FF7567EBDC7+1351783]\n\tGetHandleVerifier [0x00007FF7567E2A13+1313971]\n\tGetHandleVerifier [0x00007FF7566DDD16+245686]\n\t(No symbol) [0x00007FF75666759F]\n\t(No symbol) [0x00007FF756663814]\n\t(No symbol) [0x00007FF7566639A2]\n\t(No symbol) [0x00007FF75665A3FF]\n\tBaseThreadInitThunk [0x00007FF90D88257D+29]\n\tRtlUserThreadStart [0x00007FF90EF0AF28+40]", "trace": "self = <test_form.Test object at 0x0000024A51246EC0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c9176286f38ba835cf915f0340eaa472\")>\n\n    @pytest.mark.practiceForm\n    @allure.feature('Practice form')\n    @allure.story('Practice form')\n    def test_practice_form(self, browser):\n        test_page = AutomatonPracticeForm(browser)\n        test_page.go_to_site()\n        test_page.set_firstname(\"Алексей\")\n        test_page.set_lastname(\"Кузнецов\")\n        test_page.set_email(\"horizondd73@gmail.com\")\n        test_page.set_gender('2') # 1 - male, 2 - female, другое значение - other\n        test_page.set_mobile(\"1234567890\")\n        test_page.open_calendar()\n        test_page.set_month('2') # № месяца по порядку 0 - январь, 11 - декабрь\n        test_page.set_year('1994')\n        test_page.set_day(18)\n        #test_page.set_day()\n        test_page.set_subject(\"eng\")\n>       test_page.set_picture(\"C:/Users/horiz/OneDrive/Desktop/sdet/project/1.png\")\n\ntest_form.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nautomation_practice_form.py:82: in set_picture\n    self.set_text(Locators.picture, path)\nbase_page.py:16: in set_text\n    field.send_keys(word)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:231: in send_keys\n    self._execute(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024A512443D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: File not found : C:/Users/...07FF75665A3FF]\\\\n\\\\tBaseThreadInitThunk [0x00007FF90D88257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF90EF0AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: File not found : C:/Users/horiz/OneDrive/Desktop/sdet/project/1.png\nE         (Session info: chrome=127.0.6533.120)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7566A9642+30946]\nE       \t(No symbol) [0x00007FF75665E3D9]\nE       \t(No symbol) [0x00007FF756556FDA]\nE       \t(No symbol) [0x00007FF7565A041D]\nE       \t(No symbol) [0x00007FF7565CCA6A]\nE       \t(No symbol) [0x00007FF75659BBB6]\nE       \t(No symbol) [0x00007FF7565CCC80]\nE       \t(No symbol) [0x00007FF7565EB041]\nE       \t(No symbol) [0x00007FF7565CC813]\nE       \t(No symbol) [0x00007FF75659A6E5]\nE       \t(No symbol) [0x00007FF75659B021]\nE       \tGetHandleVerifier [0x00007FF7567DF84D+1301229]\nE       \tGetHandleVerifier [0x00007FF7567EBDC7+1351783]\nE       \tGetHandleVerifier [0x00007FF7567E2A13+1313971]\nE       \tGetHandleVerifier [0x00007FF7566DDD16+245686]\nE       \t(No symbol) [0x00007FF75666759F]\nE       \t(No symbol) [0x00007FF756663814]\nE       \t(No symbol) [0x00007FF7566639A2]\nE       \t(No symbol) [0x00007FF75665A3FF]\nE       \tBaseThreadInitThunk [0x00007FF90D88257D+29]\nE       \tRtlUserThreadStart [0x00007FF90EF0AF28+40]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: InvalidArgumentException"}, "steps": [{"name": "first name input", "status": "passed", "start": 1724416480480, "stop": 1724416480621}, {"name": "last name input", "status": "passed", "start": 1724416480621, "stop": 1724416480737}, {"name": "email name input", "status": "passed", "start": 1724416480738, "stop": 1724416480893}, {"name": "gender input", "status": "passed", "start": 1724416480893, "stop": 1724416480956}, {"name": "mobile input", "status": "passed", "start": 1724416480956, "stop": 1724416481085}, {"name": "open calendar", "status": "passed", "start": 1724416481085, "stop": 1724416481220}, {"name": "month input", "status": "passed", "start": 1724416481220, "stop": 1724416481340}, {"name": "year input", "status": "passed", "start": 1724416481340, "stop": 1724416481425}, {"name": "day input", "status": "passed", "start": 1724416481425, "stop": 1724416481488}, {"name": "subject input", "status": "passed", "start": 1724416481488, "stop": 1724416481659}, {"name": "image input", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: File not found : C:/Users/horiz/OneDrive/Desktop/sdet/project/1.png\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7566A9642+30946]\n\t(No symbol) [0x00007FF75665E3D9]\n\t(No symbol) [0x00007FF756556FDA]\n\t(No symbol) [0x00007FF7565A041D]\n\t(No symbol) [0x00007FF7565CCA6A]\n\t(No symbol) [0x00007FF75659BBB6]\n\t(No symbol) [0x00007FF7565CCC80]\n\t(No symbol) [0x00007FF7565EB041]\n\t(No symbol) [0x00007FF7565CC813]\n\t(No symbol) [0x00007FF75659A6E5]\n\t(No symbol) [0x00007FF75659B021]\n\tGetHandleVerifier [0x00007FF7567DF84D+1301229]\n\tGetHandleVerifier [0x00007FF7567EBDC7+1351783]\n\tGetHandleVerifier [0x00007FF7567E2A13+1313971]\n\tGetHandleVerifier [0x00007FF7566DDD16+245686]\n\t(No symbol) [0x00007FF75666759F]\n\t(No symbol) [0x00007FF756663814]\n\t(No symbol) [0x00007FF7566639A2]\n\t(No symbol) [0x00007FF75665A3FF]\n\tBaseThreadInitThunk [0x00007FF90D88257D+29]\n\tRtlUserThreadStart [0x00007FF90EF0AF28+40]\n\n", "trace": "  File \"C:\\Users\\horiz\\OneDrive\\Desktop\\sdet-main\\automation_practice_form.py\", line 82, in set_picture\n    self.set_text(Locators.picture, path)\n  File \"C:\\Users\\horiz\\OneDrive\\Desktop\\sdet-main\\base_page.py\", line 16, in set_text\n    field.send_keys(word)\n  File \"C:\\Users\\horiz\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 231, in send_keys\n    self._execute(\n  File \"C:\\Users\\horiz\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\horiz\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\horiz\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1724416481660, "stop": 1724416481723}], "start": 1724416440889, "stop": 1724416481771, "uuid": "89a30c8c-88b9-414c-9173-203f9064c2e0", "historyId": "cd3c24b15c7462d74501033dbd713246", "testCaseId": "cd3c24b15c7462d74501033dbd713246", "fullName": "test_form.Test#test_practice_form", "labels": [{"name": "story", "value": "Practice form"}, {"name": "feature", "value": "Practice form"}, {"name": "tag", "value": "practiceForm"}, {"name": "suite", "value": "test_form"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "Alexey"}, {"name": "thread", "value": "22052-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_form"}]}